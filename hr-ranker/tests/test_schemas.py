import pytest
from base.schemas import Resume, DEFAULT_AGE, Vacancy
import logging


class TestResumeModel:
    TEST_OBJECT = {
        "name": "",
        "age": "34¬†–≥–æ–¥–∞",
        "date_of_birth": "1¬†–º–∞—è¬†1987",
        "address": "–ú–æ—Å–∫–≤–∞",
        "metro": "",
        "position": "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ / –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –ò–ë",
        "salary": "270‚Äâ000¬†—Ä—É–±.",
        "specialization": [
            "–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
        ],
        "specialization_category": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Ç–µ–ª–µ–∫–æ–º",
        "exprerience": "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã 12¬†–ª–µ—Ç 7¬†–º–µ—Å—è—Ü–µ–≤",
        "last_work": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–¥–∞",
        "work_place_count": "7",
        "skills": [
            "–ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
            "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –∑–∞—â–∏—Ç—ã",
            "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞—É–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º",
            "sdlc",
            "–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–¥–∞",
            "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ",
            "–∞–Ω–∞–ª–∏–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
            "Linux",
            "TCP/IP",
            "OWASP",
            "–≠—Ç–∏—á–Ω—ã–π —Ö–∞–∫–∏–Ω–≥"
        ],
        "has_education": True,
        "languages": [
            "–†—É—Å—Å–∫–∏–π ‚Äî –†–æ–¥–Ω–æ–π",
            "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî B2 ‚Äî –°—Ä–µ–¥–Ω–µ-–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"
        ],
        "link": "https://hh.ru/resume/907708b30003b732df00000dc95054394c3039"
    }

    def test_init(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.dict() == self.TEST_OBJECT

    def test_get_age(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_age() == 34
        resume.age = 'nothind'
        assert resume.get_age() == DEFAULT_AGE

    def test_get_exprerience_years(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_exprerience_years() == 12.58
        resume.exprerience = '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã 12\xa0–ª–µ—Ç'
        assert resume.get_exprerience_years() == 12.0

    def test_has_education(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_education() == 1
        resume.has_education = False
        assert resume.get_education() == 0

    def test_know_english(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.know_english() == 0.6
        resume.languages = ['random', 'random']
        assert resume.know_english() == 0.0
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π']
        assert resume.know_english() == 0.0
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî C2 ‚Äî –°—Ä–µ–¥–Ω–µ-–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π']
        assert resume.know_english() == 1.0
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî C1 ‚Äî –°—Ä–µ–¥–Ω–µ-–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π']
        assert resume.know_english() == 0.8
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî B1 ‚Äî –°—Ä–µ–¥–Ω–µ-–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π']
        assert resume.know_english() == 0.4
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî A2 ‚Äî –°—Ä–µ–¥–Ω–µ-–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π']
        assert resume.know_english() == 0.2
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî A1 ‚Äî –°—Ä–µ–¥–Ω–µ-–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π']
        assert resume.know_english() == 0.0
        resume.languages = ['random', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî –†–æ–¥–Ω–æ–π']
        assert resume.know_english() == 1.0
        resume.languages = ['random', '–†—É—Å—Å–∫–∏–π ‚Äî –†–æ–¥–Ω–æ–π']
        assert resume.know_english() == 0.0

    def test_get_last_work_similarity(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_last_work_similarity(resume.last_work) == 1

    def test_last_work_words(self):
        resume = Resume(**self.TEST_OBJECT)
        words = resume.get_last_work_words()
        assert all([x in words for x in ['–Ω–∞—á–∞–ª—å–Ω–∏–∫', '–æ—Ç–¥–µ–ª', '–∞–Ω–∞–ª–∏–∑', '–ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π', '–∫–æ–¥']])

    def test_get_salary_diff(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_salary_diff(270000) == 1

    def test_get_skills_match_score(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_skills_match_score(
            ["NGINX", "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑", "–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤", "Linux", "—Ö–∞–∫–∏–Ω–≥"],
            2) == 0.68

    def test_get_last_work_count(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_last_work_count() == 7

    def test_get_work_experience_score(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_work_experience_score(3) == 1.797

    def test_get_work_experience_score_over_ages(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_work_experience_score_over_ages(3) == 0.665

    def test_get_specialization_match(self):
        resume = Resume(**self.TEST_OBJECT)
        assert resume.get_specialization_match("–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")


class TestVacancyModel:
    TEST_OBJECT = {
        "companyName": "HR Prime",
        "description": "–¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: 1‚Äì3 –≥–æ–¥–∞–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å, –ø–æ–ª–Ω—ã–π –¥–µ–Ω—å–í –∫—Ä—É–ø–Ω—É—é IT-–∫–æ–º–ø–∞–Ω–∏—é —Ç—Ä–µ–±—É–µ—Ç—Å—è Middle/Senior Java —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.    –û–¥–∏–Ω –∫–ª–∏–∫ - —à–∞–≥ –∫ –º–µ—á—Ç–µ üòâ     –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:   –û—Ç–ª–∏—á–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ Java, –≤–µ—Ä—Å–∏—è 8 –∏ –≤—ã—à–µ.   –û–ø—ã—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Spring, Spring Boot –∏ Hibernate (–æ—Ç 1 –≥–æ–¥–∞).   –û–ø—ã—Ç –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–æ—Ç 3-—Ö –ª–µ—Ç).   –ó–Ω–∞–Ω–∏–µ SQL –∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –æ–¥–Ω–æ–π –∏–∑ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã—Ö –°–£–ë–î ‚Äì PostgreSQL, Oracle, MS SQL, etc.   –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –æ–¥–Ω–æ–π –∏–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ ‚Äì Kafka, Rabbit MQ, IBM WebSphere MQ, etc.   –£—Å–ª–æ–≤–∏—è:   –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ—á–µ–Ω—å –º–æ–ª–æ–¥–æ–π –∏ –±—ã—Å—Ç—Ä–æ—Ä–∞—Å—Ç—É—â–µ–π –∫–æ–º–∞–Ω–¥–µ in-house —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ –∏–∑ –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –±–∞–Ω–∫–æ–≤ –†–æ—Å—Å–∏–∏;   –ê–º–±–∏—Ü–∏–æ–∑–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã;   –î–æ—Å—Ç–æ–π–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ + –ø—Ä–µ–º–∏–∏;   –î–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ.        –ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏JavaSpring FrameworkSQLHibernate ORMPostgreSQL",
        "employeeMode": "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å, –ø–æ–ª–Ω—ã–π –¥–µ–Ω—å",
        "experience": "1‚Äì3 –≥–æ–¥–∞",
        "link": "https://hh.ru/vacancy/48565881",
        "salary": "–æ—Ç 300¬†000 –¥–æ 525¬†000 —Ä—É–±. –¥–æ –≤—ã—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤",
        "tags": [
            "Java",
            "Spring Framework",
            "SQL",
            "Hibernate ORM",
            "PostgreSQL"
        ],
        "title": "Java —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
    }

    def test_init(self):
        vacancy = Vacancy(**self.TEST_OBJECT)
        assert vacancy.dict() == self.TEST_OBJECT

    def test_get_min_salary(self):
        vacancy = Vacancy(**self.TEST_OBJECT)
        assert vacancy.get_min_salary() == 300000

    def test_get_max_salary(self):
        vacancy = Vacancy(**self.TEST_OBJECT)
        assert vacancy.get_max_salary() == 525000

    def get_low_experience(self):
        vacancy = Vacancy(**self.TEST_OBJECT)
        assert vacancy.get_low_experience() == 1

    def test_get_high_experience(self):
        vacancy = Vacancy(**self.TEST_OBJECT)
        assert vacancy.get_high_experience() == 3
